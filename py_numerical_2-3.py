# show the value of 1/2^i, log10(1/2^i), negative exponent, for i=1..N

import math

N=16
for i in range(1,N+1):
    x = 2**(-i); f = math.log10(x)
    p = int(math.floor(f))
    print( '%2d) %.16f, %.5f, %d => %.8f x 10^(%d)' %
           (i, x, f, p, x*10**(-p), p) )

#  1) 0.5000000000000000, -0.30103, -1 => 5.00000000 x 10^(-1)
#  2) 0.2500000000000000, -0.60206, -1 => 2.50000000 x 10^(-1)
#  3) 0.1250000000000000, -0.90309, -1 => 1.25000000 x 10^(-1)
#  4) 0.0625000000000000, -1.20412, -2 => 6.25000000 x 10^(-2)
#  5) 0.0312500000000000, -1.50515, -2 => 3.12500000 x 10^(-2)
#  6) 0.0156250000000000, -1.80618, -2 => 1.56250000 x 10^(-2)
#  7) 0.0078125000000000, -2.10721, -3 => 7.81250000 x 10^(-3)
#  8) 0.0039062500000000, -2.40824, -3 => 3.90625000 x 10^(-3)
#  9) 0.0019531250000000, -2.70927, -3 => 1.95312500 x 10^(-3)
# 10) 0.0009765625000000, -3.01030, -4 => 9.76562500 x 10^(-4)
# 11) 0.0004882812500000, -3.31133, -4 => 4.88281250 x 10^(-4)
# 12) 0.0002441406250000, -3.61236, -4 => 2.44140625 x 10^(-4)
# 13) 0.0001220703125000, -3.91339, -4 => 1.22070312 x 10^(-4)
# 14) 0.0000610351562500, -4.21442, -5 => 6.10351562 x 10^(-5)
# 15) 0.0000305175781250, -4.51545, -5 => 3.05175781 x 10^(-5)
# 16) 0.0000152587890625, -4.81648, -5 => 1.52587891 x 10^(-5)

#####################################################################
